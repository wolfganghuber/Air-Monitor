---
title: "Visualisation of Air Monitor Data"
author: "Wolfgang Huber"
format: 
  html:
    page-layout: full
---

Load the data file from the QingPing Air Monitor

```{r}
#| label: loaddat
#| message: false
files = c("The historical data of Endemannstr12 20241025-20250122.xlsx")
xl = lapply(files, readxl::read_excel) 
xr = dplyr::bind_rows(xl) 
xr = xr[!duplicated(xr), ]

xr$Time = as.POSIXct(xr$Time, format = "%d/%m/%Y %H:%M")
xr
dplyr::last(xr$Time)
```


```{r}
#| label: loadloc
#| message: false
#| eval: false
#| echo: false
# Add locations from manual notes
locs = readr::read_csv("locations.csv")
xr$where = factor(NA, levels = sort(unique(locs$where)))
for (i in seq_len(nrow(locs))) {
  end = if (i < nrow(locs)) (locs$start[i+1]) else +Inf
  rg = (xr$Time >= locs$start[i]) & (xr$Time < end) 
  xr$where[rg] = locs$where[i]
}
```

Date range

```{r}
#| label: daterange
#| message: FALSE
xr = dplyr::filter(xr, Time >= as.POSIXct("2025-01-12", format = "%Y-%m-%d")) 
```

```{r}
#| label: pivot
library("tidyr")
# x = pivot_longer(xr, cols = !matches("Time|where"))
x = pivot_longer(xr, cols = !matches("Time"))
```

```{r}
#| label: plotall
#| fig-dim: !expr c(15, 11)
#| out-width: 100%
library("ggplot2")
# ggplot(x, aes(x = Time, y = value, col = where)) + geom_point(size = 0.5) +
ggplot(x, aes(x = Time, y = value)) + geom_point(size = 0.5) +
  facet_wrap( ~name, ncol = 1, scales = "free") +
  scale_x_datetime(breaks = "1 day", minor_breaks = "6 hours",
                   date_labels = "%e.%m.")
```

```{r}
#| label: plotall2
#| fig-dim: !expr c(15, 3)
#| out-width: 100%
dplyr::filter(x, name %in% c("PM2.5 (μg/m³)", "Humidity (%RH)")) |>
  ggplot(aes(x = Time, y = value, col = name)) + geom_point(size = 0.5) +
    scale_x_datetime(breaks = "1 day", minor_breaks = "6 hours",
                     date_labels = "%e.%m.")
```

Gibt es einen Tagesrhythmus?

```{r}
#| label: plotdaily
#| fig-dim: !expr c(6, 6)
#| out-width: 100%
#| message: FALSE
library("dplyr")
mutate(x, Time = format(Time)) |>
  separate_wider_delim(cols = Time, names  = c('Date', 'Time'), delim = ' ') |>
    # group_by(Time, name, where) |>
    group_by(Time, name) |>
    summarise(avg = mean(value, trim = 0.1)) |>
  mutate(Time = as.POSIXct(Time, format = "%H:%M")) |>
  ggplot(aes(x = Time, y = avg)) + geom_point(size = 0.5) +
    facet_wrap( ~name, ncol = 1, scales = "free") +
    scale_x_datetime(breaks = "2 hour", date_labels = "%H:%M")
```